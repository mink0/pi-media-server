---

version: "2.1"
services:
  #
  # Nginx proxy
  #
  nginx:
    image: linuxserver/nginx
    container_name: nginx
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - ./config/nginx/proxy.conf:/config/nginx/proxy.conf
      - ./config/nginx/ssl.conf:/config/nginx/ssl.conf
      - ./config/nginx/site-confs:/config/nginx/site-confs
      - ./config/nginx/www:/config/www
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped

  #
  # Transmission
  #
  transmission:
    image: linuxserver/transmission
    container_name: transmission
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=$UMASK
    volumes:
      - $CONFIG_DIR/transmission:/config
      - ./config/transmission/settings.json:/defaults/settings.json
      - $MEDIA_DIR/downloads:/downloads
      - $MEDIA_DIR/media/movies:/movies
      - $MEDIA_DIR/media/cartoons:/cartoons
      - $MEDIA_DIR/media/tvshows:/tvshows
      - $MEDIA_DIR/media/music:/music
      - $MEDIA_DIR/media/tutorials:/tutorials
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped

  #
  # miniDLNA server
  #
  minidlna:
    image: vladgh/minidlna
    container_name: minidlna
    environment:
      - MINIDLNA_MEDIA_DIR_1=V,/media/movies
      - MINIDLNA_MEDIA_DIR_2=V,/media/tvshows
      - MINIDLNA_MEDIA_DIR_3=V,/media/cartoons
      - MINIDLNA_MEDIA_DIR_4=A,/media/music
      - MINIDLNA_MEDIA_DIR_5=/downloads
      - MINIDLNA_inotify=yes
      - MINIDLNA_root_container=B
    volumes:
      - $MEDIA_DIR/media:/media:ro
      - $MEDIA_DIR/downloads:/downloads:ro
    network_mode: host
    restart: unless-stopped

  #
  # Plex
  #
  plex:
    image: linuxserver/plex:bionic
    container_name: plex
    environment:
      - USERID=$PUID
      - GROUPID=$PGID
      - TZ=$TZ
      - PLEX_CLAIM=$PLEX_CLAIM
      - VERSION=docker
    volumes:
      - $CONFIG_DIR/plex:/config
      - $MEDIA_DIR/media:/data:ro
    network_mode: host
    restart: unless-stopped

  homeassistant:
    image: homeassistant/raspberrypi4-homeassistant:stable
    container_name: homeassistant
    environment:
      - USERID=$PUID
      - GROUPID=$PGID
      - TZ=$TZ
    volumes:
      - $CONFIG_DIR/homeassistant:/config
    network_mode: host
    restart: unless-stopped

  #
  # Emby server
  #
  #emby:
  #  image: linuxserver/emby
  #  container_name: emby
  #  environment:
  #    - USERID=$PUID
  #    - GROUPID=$PGID
  #    - TZ=$TZ
  #  volumes:
  #    - $CONFIG_DIR/emby:/config
  #    - $MEDIA_DIR/media:/data:ro
  #    - /dev/dri:/dev/dri
  #  network_mode: host
  #  restart: unless-stopped

  #
  # Readymedia (you need to build it locally)
  #
  #  image: rpi-readymedia
  #  container_name: readymedia
  #  volumes:
  #    - ./config/readymedia/minidlna.conf:/etc/minidlna.conf
  #    - $MEDIA_DIR/media:/media:ro
  #    - $MEDIA_DIR/downloads:/media/downloads:ro
  #  network_mode: host
  #  restart: unless-stopped

  #
  # Gerbera: (youn need to build it locally)
  #
  #gerbera:
  #  image: gerbera
  #  container_name: gerbera
  #  volumes:
  #    - $MEDIA_DIR/media:/media:ro
  #    - ./config/gerbera/config.xml:/root/.config/gerbera/config.xml
  #  network_mode: host
  #  restart: unless-stopped


  ##
  # Jackett + Sonarr + Radarr + Lidarr
  #

  #
  # Tor proxy (set for Jackett)
  #
  tor:
    #image: dperson/torproxy:8d7aa5bf7a9d
    image: torproxy:local
    container_name: tor
    environment:
      - USERID=$PUID
      - GROUPID=$PGID
      - TZ=$TZ
      - BW=$TOR_LIMIT_BW
      - LOCATION=$TOR_LOCATION
    ports:
      - 8118:8118
      - 9050:9050
    restart: unless-stopped

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $CONFIG_DIR/jackett:/config/Jackett
      - ./config/jackett/ServerConfig.json:/defaults/ServerConfig.json
      - ./config/jackett/cont-init.d:/etc/cont-init.d
    ports:
      - 9117:9117
    restart: unless-stopped

  #
  # Radarr (movies)
  #
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=$UMASK
    volumes:
      - $CONFIG_DIR/radarr:/config
      - $MEDIA_DIR/media/movies:/movies
      - $MEDIA_DIR/media/cartoons:/cartoons
      - $MEDIA_DIR/downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped

  #
  # Sonarr (tvshows)
  #
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=$UMASK
    volumes:
      - $CONFIG_DIR/sonarr:/config
      - $MEDIA_DIR/media/tvshows:/tvshows
      - $MEDIA_DIR/downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped

  #
  # Lidarr (music)
  #
  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=$UMASK
    volumes:
      - $CONFIG_DIR/lidarr:/config
      - $MEDIA_DIR/media/music:/music
      - $MEDIA_DIR/downloads:/downloads
    ports:
      - 8686:8686
    restart: unless-stopped
